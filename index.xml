<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bartosz Franaszek on Bartosz Franaszek</title>
    <link>https://franaszek.github.io/index.xml</link>
    <description>Recent content in Bartosz Franaszek on Bartosz Franaszek</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2017 Bartosz Franaszek</copyright>
    <lastBuildDate>Wed, 20 Apr 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>zajęcia 9</title>
      <link>https://franaszek.github.io/project/zajecia-9/</link>
      <pubDate>Tue, 09 May 2017 14:39:36 +0200</pubDate>
      
      <guid>https://franaszek.github.io/project/zajecia-9/</guid>
      <description>&lt;p&gt;&lt;h1&gt;2017-05-10&lt;/h1&gt;
&lt;h2&gt;Laboratorium&lt;/h2&gt;
&lt;b&gt;Zadanie&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Zaimplementuj interfejsy:
&lt;pre&gt;
Generator
    int daj(); //daje kolejną wartość
&lt;/pre&gt;
&lt;pre&gt;
Filtr
    void weź(int i);
&lt;/pre&gt;
&lt;pre&gt;
Wypisywacz
    void wypisz();
&lt;/pre&gt;&lt;/p&gt;

&lt;p&gt;A następnie klasy implementujące:&lt;/p&gt;

&lt;p&gt;Generator Naturalny, który daje kolejne liczby naturalne.&lt;/p&gt;

&lt;p&gt;Generator Czytelnik, który wczytuje kolejne liczby z wejścia.&lt;/p&gt;

&lt;p&gt;Generator Losowy, który losuje kolejne liczby.&lt;/p&gt;

&lt;p&gt;Filtr Porównywacz: jak dostaje mniejszą liczbę od swojej, to zapamiętuje, a starą posyła do następnego filtra. jak dostaje większą-równą, to posyła dalej.
ZaślepkaP: dostaje liczbę, tworzy nowy Filtr Porównywacz z tą liczbą.&lt;/p&gt;

&lt;p&gt;Filtr Dzielnik: jak nowa liczba jest wielokrotnością własnej, to nic nie robi, wpp przesyła dalej.&lt;/p&gt;

&lt;p&gt;ZaślepkaD: dostaje liczbę, tworzy nowy Filtr Dzielnik z tą liczbą.&lt;/p&gt;

&lt;p&gt;Następnie zbuduj zestaw generator-filtr zaślepka do posortowania liczb, albo wygenerowania zestawu liczb pierwszych.&lt;/p&gt;

&lt;p&gt;Filtry muszą implementować Wypisywacz, ale zaślepki już nie muszą.&lt;/p&gt;

&lt;p&gt;Dodatkowo, zaimplementuj metodę, która dostaje generator i filtr (nie wie jaki) i wypisze wynik wielokrotnego zastosowania &amp;lsquo;daj&amp;rsquo;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2&gt;Ćwiczenia&lt;/h2&gt;

&lt;p&gt;Zadanie ONP.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>zajęcia 8</title>
      <link>https://franaszek.github.io/project/zajecia-8/</link>
      <pubDate>Mon, 24 Apr 2017 15:28:14 +0200</pubDate>
      
      <guid>https://franaszek.github.io/project/zajecia-8/</guid>
      <description>&lt;p&gt;&lt;h1&gt;2017-04-26&lt;/h1&gt;
&lt;h2&gt;Laboratorium&lt;/h2&gt;
&lt;b&gt;Zadanie&lt;/b&gt; Hierarchia wyrażeń logicznych&lt;/p&gt;

&lt;p&gt;Napisz hierarchię wyrażeń logicznych (analogiczne do wyrażeń arytmetycznych)&lt;/p&gt;

&lt;p&gt;stałe: True, False&lt;/p&gt;

&lt;p&gt;zmienna: X&lt;/p&gt;

&lt;p&gt;operatory 2-argumentowe: and, or, xor, &amp;hellip;&lt;/p&gt;

&lt;p&gt;operator 1-argumentowy: not, ?&lt;/p&gt;

&lt;p&gt;Operacje:
&lt;pre&gt;
public void printOut();
public boolean countForValue(boolean x); //również wypisze wartość na konsolę.
&lt;/pre&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Uwaga&lt;/b&gt; Zadanie za jeden punkt. Kto skończy na Laboratorium, ten od razu zgarnie, kto nie skończy, ten zgarnie na kolejnych zajęciach.&lt;/p&gt;

&lt;hr/&gt;

&lt;h2&gt;Ćwiczenia&lt;/h2&gt;

&lt;p&gt;Gra w Blackjacka (nasze Oczko, czy Dwadzieścia-jeden) jest grą karcianą, polegającą na zbieraniu kart tak, by uzbierać więcej oczek na kartach niż rywale, ale nie więcej niż 21. Dokładne reguły gry bywają różne, my przyjmiemy w tym zadaniu pewne ich uproszczenie.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;h2&gt;Praca domowa: Sklep 2&lt;/h2&gt;
&lt;b&gt;Za dwa punkty&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Do naszej aktualnej implementacji należy dodać rozszeżenie: dostawca. Od teraz, włączając sklep, będzie można wpisać &amp;ldquo;end&amp;rdquo; - zakończy program, lub wybrać jeden z dwóch trybów, odpowiednio, za pomocą komend: &amp;ldquo;klient&amp;rdquo;, aby wejść w tryb klienta, i tam bez większych zmian, lub &amp;ldquo;dostawca&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;W przypadku wpisania innego polecenia niż klient/dostawca/end, program ma wyrzucić elegancki wyjątek (własny).&lt;/p&gt;

&lt;p&gt;Po wybraniu trybu &amp;ldquo;dostawca&amp;rdquo;, za pomocą poleceń można dodawać produkty do sklepu:
&lt;pre&gt;
dostarcz pomidory na_wage 10 1000
&lt;/pre&gt;
gdzie &amp;ldquo;pomidory&amp;rdquo; to nazwa produktu, &amp;ldquo;10&amp;rdquo; to cena, a &amp;ldquo;1000&amp;rdquo; to ilość, lub:
&lt;pre&gt;
dostarcz laptop na_sztuki 3999 100
&lt;/pre&gt;
gdzie &amp;ldquo;laptop&amp;rdquo; to nazwa, &amp;ldquo;3999&amp;rdquo; to cena, a &amp;ldquo;100&amp;rdquo; to liczba sztuk.&lt;/p&gt;

&lt;p&gt;Proszę zwróćcie uwagę na polecenia &amp;ldquo;na_wage&amp;rdquo; oraz &amp;ldquo;na_sztuki&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;operacja &amp;ldquo;end&amp;rdquo; pozwala wrócić do wyboru klient/dostawca.&lt;/p&gt;

&lt;p&gt;W trybie &amp;ldquo;klient&amp;rdquo; można wykonać polecenie &amp;ldquo;wypisz&amp;rdquo; które wypisuje stan sklepu (nazwa produktu, pisana małymi literami, data (i godzina z sekundami) dodania produktu, ilość/liczba oraz cena, np:&lt;/p&gt;

&lt;pre&gt;
Pomidory, dodane 2017.04.26 23:14:23, ilość: 1000kg, cena za kilogram: 10zł
Laptop, dodane 2017.04.26 23:14:45, liczba: 100, cena za sztukę: 3999zł
&lt;/pre&gt;

&lt;p&gt;Następnie opracja &amp;ldquo;kup&amp;rdquo;, jak poprzednio (ale mogę pisać wielką bądź małą literą, a nazwy mogą mieć spację) oraz operacja &amp;ldquo;end&amp;rdquo; która pozwala wrócić do trybu wyboru dostawca/klient.&lt;/p&gt;

&lt;p&gt;&lt;b&gt; uwagi&lt;/b&gt;:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Jeżeli klient wejdzie do sklepu przed dostawcą, to sklep jest pusty.&lt;/li&gt;
&lt;li&gt;Nazwy produktów można pisać małą lub wielką literą. Nazwy produktów mogą zawierać spacje!&lt;/li&gt;
&lt;li&gt;Proszę zadbać o to, aby w programach nie było polskich znaków (nigdzie) i aby programy były w UTF-8.&lt;/li&gt;
&lt;li&gt;Rozwiązania należy umieścić w tym samym folderze co ostatnio, lecz pod nazwą
&lt;pre&gt;
sklep2_(inicjały i numer indeksu).zip
&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;tak jak ostatnio w paczce ma być projekt oraz wygenerowany JAR.&lt;/li&gt;
&lt;li&gt;termin oddania: &lt;b&gt;2017-05-14&lt;/b&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>zajęcia 7</title>
      <link>https://franaszek.github.io/project/zajecia-7/</link>
      <pubDate>Tue, 11 Apr 2017 14:47:08 +0200</pubDate>
      
      <guid>https://franaszek.github.io/project/zajecia-7/</guid>
      <description>&lt;h1&gt;UWAGA: w dniu 2017-04-12 laboratoria nie odbędą się!&lt;/h1&gt;

&lt;h2&gt;Ćwiczenia (odbędą się, standardowo w sali 3160)&lt;/h2&gt;

&lt;p&gt;Zakończymy przykład na wielomiany.&lt;/p&gt;

&lt;p&gt;Rozwiążemy zadania przygotowawcze do kolokwium. Stare kolokwia można znaleźć &lt;a href=&#34;https://moodle.mimuw.edu.pl/course/view.php?id=14#section-20&#34;&gt;tutaj&lt;/a&gt;. Warto również zapoznać się z &lt;a href=&#34;https://moodle.mimuw.edu.pl/mod/page/view.php?id=635&#34;&gt;tym&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>zajęcia 6</title>
      <link>https://franaszek.github.io/project/zajecia-6/</link>
      <pubDate>Tue, 04 Apr 2017 22:34:56 +0200</pubDate>
      
      <guid>https://franaszek.github.io/project/zajecia-6/</guid>
      <description>&lt;h2&gt;2017-08-22&lt;/h2&gt;

&lt;h2&gt;Laboratorium&lt;/h2&gt;

&lt;p&gt;JVM, JRE, JDK?&lt;/p&gt;

&lt;p&gt;Zadanie: klasa Konto.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3&gt;SKLEP&lt;/h3&gt;

&lt;p&gt;Napisz Program “sklep.jar”, który będzie umożliwiał zakupy (standard in/out) wybranych produktów (z co najmniej dziesięciu). Produkty dzielą się na dwa rodzaje: produkty na sztuki i produkty na wagę.&lt;/p&gt;

&lt;p&gt;Program po uruchomieniu za pomocą
&lt;pre&gt;java -jar sklep.jar&lt;/pre&gt;
przedstawi się, wypisze bieżącą datę i godzinę oraz listę produktów wraz z dostępnością oraz ceną, np.:&lt;/p&gt;

&lt;p&gt;Pomidory, cena: 9,99zł/kg, dostępne 200kg&lt;/p&gt;

&lt;p&gt;Kawa ziarnista, opakowanie 0,5kg, cena: 41,99zł, dostępne 16 sztuk.&lt;/p&gt;

&lt;p&gt;następnie program zapyta użytkownika o pojemność portfela, którą ten wpisze, np:&lt;/p&gt;

&lt;p&gt;2340&lt;/p&gt;

&lt;p&gt;lub&lt;/p&gt;

&lt;p&gt;1234,5&lt;/p&gt;

&lt;p&gt;ale już nie&lt;/p&gt;

&lt;p&gt;1234.5&lt;/p&gt;

&lt;p&gt;Następnie użytkownik będzie mógł rozpocząć zakupy. Przykładowe polecenie zakupu:&lt;/p&gt;

&lt;p&gt;kup Pomidory 23,564&lt;/p&gt;

&lt;p&gt;lub&lt;/p&gt;

&lt;p&gt;kup pomidory 23,564&lt;/p&gt;

&lt;p&gt;lub&lt;/p&gt;

&lt;p&gt;kup Kawa ziarnista 5&lt;/p&gt;

&lt;p&gt;Po każdym zakupie sklep poinformuje o zawartości portfela. Proszę pamiętać o dokładnej walidacji wprowadzanych danych.&lt;/p&gt;

&lt;p&gt;użytkownik będzie kontynuował zakupy aż wpisze “end”. Po tym poleceniu sklep wypisze listę zakupionych produktów, ilość wydanych pieniędzy oraz czas trwania zakupów.&lt;/p&gt;

&lt;p&gt;Do nauczenia
Daty (Date, LocalDateTime, Calendar, System.currentTimeInMilis()), Scanner, jar&lt;/p&gt;

&lt;p&gt;Rozwiązania należy spakować w zip sklep_(inicjały i nr indeksu).zip i umieścić w folderze &lt;a href=&#34;https://drive.google.com/drive/folders/0B9OvVI7-iiR2U2hUWnlJT04zdDg&#34;&gt;na google drive&lt;/a&gt; do 2017.04.19, godz 23.59
w zip ma się znajdować plik sklep_(inicjały i nr indeksu).jar, oraz wyeksportowany projekt (o nazwie toż samej).&lt;/p&gt;

&lt;p&gt;Zachęcam do korzystania z testów automatycznych (te jednak nie są tym razem obowiązkowe)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>zajęcia 5 - Dziedziczenie</title>
      <link>https://franaszek.github.io/project/zajecia-5/</link>
      <pubDate>Tue, 28 Mar 2017 13:19:09 +0200</pubDate>
      
      <guid>https://franaszek.github.io/project/zajecia-5/</guid>
      <description>&lt;h2&gt;2017-08-22&lt;/h2&gt;

&lt;h2&gt;Laboratorium&lt;/h2&gt;

&lt;p&gt;&lt;h3&gt;Zadanie &amp;ldquo;Wielomian&amp;rdquo;&lt;/h3&gt;
Zaimplementuj &amp;lsquo;wielomian&amp;rsquo; jednej zmiennej i operacje na nim:
&lt;pre&gt;Wielomian dodaj(Wielomian)&lt;/pre&gt;
&lt;pre&gt;String toString()&lt;/pre&gt;
&lt;pre&gt;Wielomian mnozenie(Wielomian)&lt;/pre&gt;
&lt;pre&gt;Double wartoscWPkt(Double pkt)&lt;/pre&gt;
Różne konstruktory: jako jednomian, lub z tablicy współczynników.
dla chętnych:
&lt;pre&gt;Wielomian podziel(Wielomian)&lt;/pre&gt;&lt;/p&gt;

&lt;p&gt;&lt;h3&gt;Zadanie &amp;ldquo;Bufor cykliczny&amp;rdquo;&lt;/h3&gt;
Należy zaimplementować bufor cykliczny, który będzie obsługiwał operacje wstawiania/usuwania z początku i końca, obliczał liczbę elementów w buforze, sprawdzał czy jest pusty. Implementacja na tablicy.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Zajęcia 4 - Klasy</title>
      <link>https://franaszek.github.io/project/zajecia-4/</link>
      <pubDate>Fri, 17 Mar 2017 14:53:39 +0100</pubDate>
      
      <guid>https://franaszek.github.io/project/zajecia-4/</guid>
      <description>&lt;h2&gt;2017-08-22&lt;/h2&gt;

&lt;h2&gt;Laboratorium&lt;/h2&gt;
Wprowadzimy jUnit oraz strukturę projektu. Omówimy zadania Sito Arystotelesa i Ułamek.

&lt;h2&gt;Ćwiczenia&lt;/h2&gt;

&lt;p&gt;Na rozgrzewkę zaimplementujemy rozkład liczby na czynniki pierwsze. Następnie wykonamy projekt gry &amp;ldquo;Monopoly&amp;rdquo;.&lt;/p&gt;

&lt;!-- opowiemy o jdk, jre, jvm i garbage collector. --&gt;  

&lt;hr /&gt;

&lt;h3&gt;Praca domowa: Sito Arystotelesa&lt;/h3&gt;

&lt;p&gt;Dla podanej liczby n zwróć największą liczbę pierwszą &amp;lt;= n.&lt;/p&gt;

&lt;p&gt;Szkielet projektu (do zaimportowania w eclipse) można znaleźć &lt;a href=&#34;https://franaszek.github.io/download/project.zip&#34;&gt;tutaj&lt;/a&gt; Szkielet zawiera testy automatyczne - omówimy ten temat na zajęciach. Program powinien być uruchamialny za pomocą klasy &lt;pre&gt;Program&lt;/pre&gt;Implementacja algorytmu ma się znaleźć w klasie &lt;pre&gt;EratosthenesSieve&lt;/pre&gt; Nie krępujcie się używać dowolnych klas pomocniczych.&lt;/p&gt;

&lt;h3&gt;Praca domowa: Ułamek&lt;/h3&gt;
 

&lt;p&gt;Należy zaplementować klasę “Ulamek”, (proszę bez polskich znaków tym razem), która w konstruktorze przyjmie wartości ‘licznik’ i ‘mianownik’ typu ‘long’.
Ułamek ma posiadać dwie operacje:&lt;/p&gt;

&lt;p&gt;&lt;pre&gt;
public Ulamek dodaj(Ulamek ulamek)
&lt;/pre&gt;&lt;pre&gt;
public Ulamek pomnóż(Ulamek ulamek)
&lt;/pre&gt;&lt;pre&gt;
public String toString()
&lt;/pre&gt;
Dla chętnych: metody odejmij i podziel.
Należy również zaimplementować testy automatyczne (junit), dla każdej z powyższych operacji (po 3 testy do operacji) UWAGA: co zrobić z przypadkami skrajnymi? Warto dodać testy, które to sprawdzą.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;b&gt;Rozwiązania należy wysłać na mój adres (w temacie: &amp;ldquo;[PO ex2] Imię Nazwisko&amp;rdquo;), do dnia 29.03.2017. Email ma zawierać wyeksportowany projekt do formatu zip. &lt;/b&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>zajęcia 3 - Java</title>
      <link>https://franaszek.github.io/project/zajecia-3/</link>
      <pubDate>Tue, 14 Mar 2017 14:02:31 +0100</pubDate>
      
      <guid>https://franaszek.github.io/project/zajecia-3/</guid>
      <description>&lt;h2&gt;2017-15-03&lt;/h2&gt;

&lt;p&gt;&lt;h4&gt;Lab&lt;/h4&gt;
Zainstalujemy:
Java 8: &lt;a href=&#34;http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html&#34;&gt;http://www.oracle.com/...&lt;/a&gt;
I Eclipse: &lt;a href=&#34;http://www.eclipse.org/downloads/&#34;&gt;http://www.eclipse.org/...&lt;/a&gt;
Lub IDEA: &lt;a href=&#34;https://www.jetbrains.com/idea/download/&#34;&gt;https://www.jetbrains.com/...&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Zrobimy pierwszy projekt w IDE (Integrated Development Environment) i spróbujemy go skompilować poprzez IDE oraz z konsoli.&lt;/p&gt;

&lt;p&gt;&lt;h4&gt;Lab i Ćwiczenia&lt;/h4&gt;
Będziemy rozwiązywać różne problemy algorytmiczne.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>zajęcia 2 - Projektowanie</title>
      <link>https://franaszek.github.io/project/zajecia-2/</link>
      <pubDate>Wed, 08 Mar 2017 14:02:31 +0100</pubDate>
      
      <guid>https://franaszek.github.io/project/zajecia-2/</guid>
      <description>&lt;h2&gt;2017-08-03&lt;/h2&gt;

&lt;p&gt;&lt;h4&gt;Lab&lt;/h4&gt;
Na zajęciach zaprojektujemy grę karcianą (brydż lub poker).
&lt;br /&gt;
zasady gry w brydża: &lt;a href=&#34;http://www.zasadygry.pl/brydz_zasady_gry_13_1.htm&#34;&gt;http://www.zasadygry.pl/brydz...&lt;/a&gt;
&lt;br /&gt;
Napiszemy pierwszy program w java - Na razie używając konsoli, a następnie skompilujemy go:
&lt;pre&gt;javac &amp;lt;nazwa&amp;gt;.java&lt;/pre&gt;
i uruchomimy:
&lt;pre&gt;java &amp;lt;nazwa&amp;gt;&lt;/pre&gt;
Zapoznamy się z metodą startową &amp;ldquo;main&amp;rdquo; i przećwiczymy działanie parametrów wejściowych :
&lt;pre&gt;
public static void main(String[] args) {
    &amp;hellip;
}
&lt;/pre&gt;&lt;/p&gt;

&lt;p&gt;Omówimy również pierwszą pracę domową! (dokończenie projektu gry karcianej)
&lt;hr /&gt;
&lt;h4&gt;Ćwiczenia&lt;/h4&gt;
Na ćwiczeniach rozwiążemy problem podziału skarbów przez bilba. (zadanie z kolokwium z 2001 roku).
&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;h4&gt;Pierwsza praca domowa (1pkt)&lt;/h4&gt;
Zaprojektuj w DIA diagram klas reprezentujący grę w pokera. Uwzględnij klasy abstrakcyjne, publiczność/prywatność metod (+, -, #), generalizację i agregację. Termin oddania : 2017-03-15.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>zajęcia 1 - Wstęp</title>
      <link>https://franaszek.github.io/project/zajecia-1/</link>
      <pubDate>Wed, 01 Mar 2017 14:02:31 +0100</pubDate>
      
      <guid>https://franaszek.github.io/project/zajecia-1/</guid>
      <description>&lt;h2&gt;2017-01-03&lt;/h2&gt; 

&lt;p&gt;&lt;h4&gt;Lab&lt;/h5&gt;
&lt;div&gt;
Na zajęciach omówimy projektowanie obiektowe na przykładzie &amp;ldquo;Pojazdów&amp;rdquo; - struktury drzewiastej reprezentującej dziedziczenie.
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Wprowadzimy:
&lt;lu&gt;
 &lt;li&gt;notację pudełkową dla klas&lt;/li&gt;
 &lt;li&gt;strzałki do wyrażania podobieństwa (dziedziczenia)&lt;/li&gt;
 &lt;li&gt;podział na cechy/czynności&lt;/li&gt;
 &lt;li&gt;pojęcia abstrakcyjne (oznaczamy wielką literą A w kółku)&lt;/li&gt;
&lt;/lu&gt;
&lt;br /&gt;
Będziemy pracować z &lt;a href=&#34;https://sourceforge.net/projects/dia-installer/&#34;&gt;DIA&lt;/a&gt;&lt;br /&gt;
Dla zainteresowanych, więcej o diagramach klas można poczytać np tutaj:
&lt;a href=&#34;https://www.ibm.com/developerworks/rational/library/content/RationalEdge/sep04/bell/&#34;&gt;https://www.ibm.com/...&lt;/a&gt;
&lt;br /&gt;
Polecam też ważniaka:
&lt;a href=&#34;http://wazniak.mimuw.edu.pl/index.php?title=Programowanie_obiektowe&#34;&gt;http://wazniak.mimuw.edu.pl/...&lt;/a&gt;
&lt;br /&gt;
A przede wszystkim moodle:
&lt;a href=&#34;https://moodle.mimuw.edu.pl/course/view.php?id=14&#34;&gt;https://moodle.mimuw.edu.pl/...&lt;/a&gt;
&lt;br /&gt;
&lt;br /&gt;
&lt;h4&gt;Ćwiczenia&lt;/h4&gt;
Na ćwiczeniach omówimy przykładowe interfejsy dla Kolejki, Stosu i Grafu. Wykorzystamy Kolejkę i Stos do zaimplementowania BFS i DFS&lt;/p&gt;

&lt;p&gt;&lt;/div&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Wyniki</title>
      <link>https://franaszek.github.io/project/points/</link>
      <pubDate>Wed, 01 Mar 2017 00:03:17 +0100</pubDate>
      
      <guid>https://franaszek.github.io/project/points/</guid>
      <description>&lt;p&gt;Za małe prace domowe można zdobyć maksymalnie 10-15 punktów, jednak ostateczna liczba przyznanych punktów studenta wynosi:&lt;/p&gt;

&lt;pre&gt;Math.min(student.zdobytePkt(), 10);&lt;/pre&gt;

&lt;p&gt;Bieżące wyniki:&lt;/p&gt;

&lt;table&gt;
                &lt;tr&gt;&lt;th&gt;ID&lt;/th&gt;&lt;th&gt;KARTY&lt;/th&gt;   &lt;th&gt;UŁAMEK&lt;/th&gt; &lt;th&gt;SITO&lt;/th&gt;&lt;th&gt;SKLEP&lt;/th&gt; &lt;th&gt;JavaVS..&lt;/th&gt; &lt;th&gt;Logic&lt;/th&gt; &lt;th&gt;Sklep2&lt;/th&gt;&lt;/tr&gt;           
&lt;!-- MB --&gt;     &lt;tr&gt;&lt;td&gt;385247&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;   &lt;td&gt;1&lt;/td&gt;      &lt;td&gt;1&lt;/td&gt;      &lt;td&gt;1,9&lt;/td&gt;    &lt;td&gt;1&lt;/td&gt;        &lt;td&gt;1&lt;/td&gt;    &lt;td&gt;?&lt;/td&gt;      &lt;/tr&gt;               &lt;!-- nie mogę kupić małą literą. --&gt;                
&lt;!-- PB --&gt;     &lt;tr&gt;&lt;td&gt;385254&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;   &lt;td&gt;1&lt;/td&gt;      &lt;td&gt;1&lt;/td&gt;      &lt;td&gt;2&lt;/td&gt;  &lt;td&gt;1&lt;/td&gt;        &lt;td&gt;1&lt;/td&gt;        &lt;td&gt;?&lt;/td&gt;      &lt;/tr&gt;               &lt;!-- metoda &#39;run&#39; mogłaby być krutsza (3x) --&gt;
&lt;!-- MD --&gt;     &lt;tr&gt;&lt;td&gt;372285&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;   &lt;td&gt;1&lt;/td&gt;      &lt;td&gt;1&lt;/td&gt;      &lt;td&gt;0&lt;/td&gt;  &lt;td&gt;1&lt;/td&gt;        &lt;td&gt;1&lt;/td&gt;        &lt;td&gt;?&lt;/td&gt;      &lt;/tr&gt;               
&lt;!-- MF --&gt;     &lt;tr&gt;&lt;td&gt;385423&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;   &lt;td&gt;1&lt;/td&gt;      &lt;td&gt;1&lt;/td&gt;      &lt;td&gt;1,9&lt;/td&gt;    &lt;td&gt;1&lt;/td&gt;        &lt;td&gt;1&lt;/td&gt;    &lt;td&gt;?&lt;/td&gt;      &lt;/tr&gt;               &lt;!-- nie można kupić małą literą, za mało muwiące komunikaty --&gt;
&lt;!-- JK --&gt;     &lt;tr&gt;&lt;td&gt;359784&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;   &lt;td&gt;1&lt;/td&gt;      &lt;td&gt;1&lt;/td&gt;      &lt;td&gt;0&lt;/td&gt;  &lt;td&gt;0&lt;/td&gt;        &lt;td&gt;0&lt;/td&gt;        &lt;td&gt;?&lt;/td&gt;      &lt;/tr&gt;               
&lt;!-- KK --&gt;     &lt;tr&gt;&lt;td&gt;385830&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;   &lt;td&gt;1&lt;/td&gt;      &lt;td&gt;1&lt;/td&gt;      &lt;td&gt;1,9&lt;/td&gt;    &lt;td&gt;1&lt;/td&gt;        &lt;td&gt;1&lt;/td&gt;    &lt;td&gt;?&lt;/td&gt;      &lt;/tr&gt;               &lt;!-- nie akceptuje małą literą, Obszedłeś contains, ale straciłeś wielkie litery :) --&gt;

&lt;!-- PK --&gt;     &lt;tr&gt;&lt;td&gt;371141&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;   &lt;td&gt;1&lt;/td&gt;      &lt;td&gt;1&lt;/td&gt;      &lt;td&gt;2&lt;/td&gt;  &lt;td&gt;0&lt;/td&gt;        &lt;td&gt;1&lt;/td&gt;        &lt;td&gt;?&lt;/td&gt;      &lt;/tr&gt;                       &lt;!-- lody oreo są super --&gt;
&lt;!-- VK --&gt;     &lt;tr&gt;&lt;td&gt;372360&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;   &lt;td&gt;1&lt;/td&gt;      &lt;td&gt;1&lt;/td&gt;      &lt;td&gt;1,7&lt;/td&gt;    &lt;td&gt;0&lt;/td&gt;        &lt;td&gt;1&lt;/td&gt;    &lt;td&gt;?&lt;/td&gt;      &lt;/tr&gt;               &lt;!-- akceptuje produkty tylko małą literą. Nie wiadomo, czy udało się kupić czy nie (przydały by się lepsze komentarze. Można kupić ułamek mleka :D, Twoje rozwiązanie nie jest obiektowe --&gt;
&lt;!-- PM --&gt;     &lt;tr&gt;&lt;td&gt;385901&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;   &lt;td&gt;1&lt;/td&gt;      &lt;td&gt;1&lt;/td&gt;      &lt;td&gt;0&lt;/td&gt;  &lt;td&gt;1&lt;/td&gt;        &lt;td&gt;1&lt;/td&gt;        &lt;td&gt;?&lt;/td&gt;      &lt;/tr&gt;               
&lt;!-- AR --&gt;     &lt;tr&gt;&lt;td&gt;360949&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;   &lt;td&gt;1&lt;/td&gt;      &lt;td&gt;1&lt;/td&gt;      &lt;td&gt;2&lt;/td&gt;  &lt;td&gt;1&lt;/td&gt;        &lt;td&gt;1&lt;/td&gt;        &lt;td&gt;?&lt;/td&gt;      &lt;/tr&gt;               &lt;!--  --&gt;               
&lt;!-- RŚ --&gt;     &lt;tr&gt;&lt;td&gt;322227&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;   &lt;td&gt;0&lt;/td&gt;      &lt;td&gt;0&lt;/td&gt;      &lt;td&gt;0&lt;/td&gt;  &lt;td&gt;1&lt;/td&gt;        &lt;td&gt;0&lt;/td&gt;        &lt;td&gt;?&lt;/td&gt;      &lt;/tr&gt;               
&lt;!-- PT --&gt;     &lt;tr&gt;&lt;td&gt;347283&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;   &lt;td&gt;1&lt;/td&gt;      &lt;td&gt;1&lt;/td&gt;      &lt;td&gt;0&lt;/td&gt;  &lt;td&gt;0&lt;/td&gt;        &lt;td&gt;0&lt;/td&gt;        &lt;td&gt;?&lt;/td&gt;      &lt;/tr&gt;               

&lt;!-- KW --&gt;     &lt;tr&gt;&lt;td&gt;373379&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;   &lt;td&gt;1&lt;/td&gt;      &lt;td&gt;1&lt;/td&gt;      &lt;td&gt;0&lt;/td&gt;      &lt;/tr&gt;               
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>Example Talk</title>
      <link>https://franaszek.github.io/talk/example-talk/</link>
      <pubDate>Sun, 01 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://franaszek.github.io/talk/example-talk/</guid>
      <description>&lt;p&gt;Embed your slides or video here using &lt;a href=&#34;https://gcushen.github.io/hugo-academic-demo/post/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;shortcodes&lt;/a&gt;. Further details can easily be added using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Deep Learning</title>
      <link>https://franaszek.github.io/teaching/deep-learning/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://franaszek.github.io/teaching/deep-learning/</guid>
      <description>&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p&gt;

&lt;p&gt;Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p&gt;

&lt;p&gt;Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p&gt;

&lt;p&gt;Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p&gt;

&lt;p&gt;Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Getting started with the Academic framework for Hugo</title>
      <link>https://franaszek.github.io/post/getting-started/</link>
      <pubDate>Wed, 20 Apr 2016 12:00:00 +0000</pubDate>
      
      <guid>https://franaszek.github.io/post/getting-started/</guid>
      <description>

&lt;p&gt;The Academic framework enables you to easily create a beautifully simple personal or academic website using the &lt;a href=&#34;https://gohugo.io&#34; target=&#34;_blank&#34;&gt;Hugo&lt;/a&gt; static site generator.&lt;/p&gt;

&lt;p&gt;Key features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Easily manage your homepage, blog posts, publications, talks, and projects&lt;/li&gt;
&lt;li&gt;Configurable widgets available for Biography, Publications, Projects, News/Blog, Talks, and Contact&lt;/li&gt;
&lt;li&gt;Need a different section? Just use the Custom widget!&lt;/li&gt;
&lt;li&gt;Write in &lt;a href=&#34;https://franaszek.github.io/post/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;Markdown&lt;/a&gt; for easy formatting and code highlighting, with &lt;a href=&#34;https://en.wikibooks.org/wiki/LaTeX/Mathematics&#34; target=&#34;_blank&#34;&gt;LaTeX&lt;/a&gt; for mathematical expressions&lt;/li&gt;
&lt;li&gt;Social/academic network linking, &lt;a href=&#34;https://analytics.google.com&#34; target=&#34;_blank&#34;&gt;Google Analytics&lt;/a&gt;, and &lt;a href=&#34;https://disqus.com&#34; target=&#34;_blank&#34;&gt;Disqus&lt;/a&gt; comments&lt;/li&gt;
&lt;li&gt;Responsive and mobile friendly&lt;/li&gt;
&lt;li&gt;Simple and refreshing one page design&lt;/li&gt;
&lt;li&gt;Easy to customize&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://georgecushen.com/create-your-website-with-hugo/#installing-hugo&#34; target=&#34;_blank&#34;&gt;Install Hugo&lt;/a&gt; and create a new website by typing the following commands in your &lt;em&gt;Terminal&lt;/em&gt; or &lt;em&gt;Command Prompt&lt;/em&gt; app:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo new site my_website
cd my_website
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Install Academic with &lt;a href=&#34;https://help.github.com/articles/set-up-git/&#34; target=&#34;_blank&#34;&gt;git&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/gcushen/hugo-academic.git themes/academic
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or alternatively, &lt;a href=&#34;https://github.com/gcushen/hugo-academic/archive/master.zip&#34; target=&#34;_blank&#34;&gt;download Academic&lt;/a&gt; and extract it into a &lt;code&gt;themes/academic&lt;/code&gt; folder within your Hugo website.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;If you are creating a new website, copy the contents of the &lt;code&gt;exampleSite&lt;/code&gt; folder to your website root folder, overwriting existing files if necessary. The &lt;code&gt;exampleSite&lt;/code&gt; folder contains an example config file and content to help you get started.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cp -av themes/academic/exampleSite/* .
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Start the Hugo server from your website root folder:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo server --watch
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now you can go to &lt;a href=&#34;http://localhost:1313&#34; target=&#34;_blank&#34;&gt;localhost:1313&lt;/a&gt; and your new Academic powered website should appear.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Customize your website - refer to the &lt;em&gt;Getting Started&lt;/em&gt; section below&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Build your site by running the &lt;code&gt;hugo&lt;/code&gt; command. Then &lt;a href=&#34;https://georgecushen.com/create-your-website-with-hugo/&#34; target=&#34;_blank&#34;&gt;host it for free using Github Pages&lt;/a&gt;. Or alternatively, copy the generated &lt;code&gt;public/&lt;/code&gt; directory (by FTP, Rsync, etc.) to your production web server (such as your university&amp;rsquo;s hosting service).&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;getting-started&#34;&gt;Getting Started&lt;/h2&gt;

&lt;p&gt;Assuming you created a new website with the example content following the installation steps above, this section explores just a few more steps in order to customize it.&lt;/p&gt;

&lt;h3 id=&#34;core-parameters&#34;&gt;Core parameters&lt;/h3&gt;

&lt;p&gt;The core parameters for the website can be edited in the &lt;code&gt;config.toml&lt;/code&gt; configuration file:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Set &lt;code&gt;baseurl&lt;/code&gt; to your website URL (we recommend &lt;a href=&#34;https://georgecushen.com/create-your-website-with-hugo/&#34; target=&#34;_blank&#34;&gt;GitHub Pages&lt;/a&gt; for free hosting)&lt;/li&gt;
&lt;li&gt;Set &lt;code&gt;title&lt;/code&gt; to your desired website title such as your name&lt;/li&gt;
&lt;li&gt;The example Disqus commenting variable should be cleared (e.g. &lt;code&gt;disqusShortname = &amp;quot;&amp;quot;&lt;/code&gt;) or set to your own &lt;a href=&#34;https://disqus.com/&#34; target=&#34;_blank&#34;&gt;Disqus&lt;/a&gt; shortname to enable commenting&lt;/li&gt;
&lt;li&gt;Edit your details under &lt;code&gt;[params]&lt;/code&gt;; these will be displayed mainly in the homepage &lt;em&gt;about&lt;/em&gt; and &lt;em&gt;contact&lt;/em&gt; widgets (if used). To disable a contact field, simply clear the value to &lt;code&gt;&amp;quot;&amp;quot;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Place a square cropped portrait photo named &lt;code&gt;portrait.jpg&lt;/code&gt; into the &lt;code&gt;static/img/&lt;/code&gt; folder, overwriting any defaults. Alternatively, you can edit the &lt;code&gt;avatar&lt;/code&gt; filepath to point to a different image name or clear the value to disable the avatar feature.&lt;/li&gt;
&lt;li&gt;To enable LaTeX math for your site, set &lt;code&gt;math = true&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Social/academic networking links are defined as multiples of &lt;code&gt;[[params.social]]&lt;/code&gt;. They can be created or deleted as necessary.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;introduce-yourself&#34;&gt;Introduce yourself&lt;/h3&gt;

&lt;p&gt;Edit your biography in the &lt;em&gt;about&lt;/em&gt; widget &lt;code&gt;content/home/about.md&lt;/code&gt; that you copied across from the &lt;code&gt;themes/academic/exampleSite/&lt;/code&gt; folder. The research interests and qualifications are stored as &lt;code&gt;interests&lt;/code&gt; and &lt;code&gt;education&lt;/code&gt; variables. The academic qualifications are defined as multiples of &lt;code&gt;[[education.courses]]&lt;/code&gt; and can be created or deleted as necessary. It&amp;rsquo;s possible to completely hide the interests and education lists by deleting their respective variables.&lt;/p&gt;

&lt;h3 id=&#34;customize-the-homepage&#34;&gt;Customize the homepage&lt;/h3&gt;

&lt;p&gt;Refer to our guide on using &lt;a href=&#34;https://franaszek.github.io/post/widgets/&#34; target=&#34;_blank&#34;&gt;widgets&lt;/a&gt; to customize your homepage.&lt;/p&gt;

&lt;h3 id=&#34;add-your-content&#34;&gt;Add your content&lt;/h3&gt;

&lt;p&gt;Refer to our guide on &lt;a href=&#34;https://franaszek.github.io/post/managing-content/&#34; target=&#34;_blank&#34;&gt;managing content&lt;/a&gt; to create your own publications, blog posts, talks, and projects.&lt;/p&gt;

&lt;h3 id=&#34;remove-unused-widgets-and-pages&#34;&gt;Remove unused widgets and pages&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://franaszek.github.io/post/managing-content/#removing-content&#34; target=&#34;_blank&#34;&gt;How to remove unused widgets and content pages&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;customization-upgrading&#34;&gt;Customization &amp;amp; Upgrading&lt;/h3&gt;

&lt;p&gt;Continue reading below for advanced customization tips and instructions for keeping the framework up-to-date with any improvements that become available.&lt;/p&gt;

&lt;h2 id=&#34;advanced-customization&#34;&gt;Advanced customization&lt;/h2&gt;

&lt;p&gt;It is possible to carry out many customizations without touching any files in &lt;code&gt;themes/academic&lt;/code&gt;, making it easier to upgrade the framework in the future.&lt;/p&gt;

&lt;h3 id=&#34;navigation-menu&#34;&gt;Navigation menu&lt;/h3&gt;

&lt;p&gt;The &lt;code&gt;[[menu.main]]&lt;/code&gt; entries towards the bottom of &lt;code&gt;config.toml&lt;/code&gt; define the navigation links at the top of the website. They can be added or removed as desired.&lt;/p&gt;

&lt;p&gt;To create a dropdown sub-menu, add &lt;code&gt;identifier = &amp;quot;something&amp;quot;&lt;/code&gt; to the parent item and &lt;code&gt;parent = &amp;quot;something&amp;quot;&lt;/code&gt; to the child item.&lt;/p&gt;

&lt;h3 id=&#34;website-icon&#34;&gt;Website icon&lt;/h3&gt;

&lt;p&gt;Save your main icon and mobile icon as square PNG images named &lt;code&gt;icon.png&lt;/code&gt; and &lt;code&gt;apple-touch-icon.png&lt;/code&gt;, respectively. Place them in your root &lt;code&gt;static/img/&lt;/code&gt; folder.&lt;/p&gt;

&lt;h3 id=&#34;theme-color-css&#34;&gt;Theme color (CSS)&lt;/h3&gt;

&lt;p&gt;You can link custom CSS assets (relative to your root &lt;code&gt;static/css&lt;/code&gt;) from your &lt;code&gt;config.toml&lt;/code&gt; using &lt;code&gt;custom_css = [&amp;quot;custom.css&amp;quot;]&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For example, lets make a green theme. First, define &lt;code&gt;custom_css = [&amp;quot;green.css&amp;quot;]&lt;/code&gt; in &lt;code&gt;config.toml&lt;/code&gt;. Then we can download the example &lt;a href=&#34;https://gist.github.com/gcushen/d5525a4506b9ccf83f2bce592a895495&#34; target=&#34;_blank&#34;&gt;green theme&lt;/a&gt; and save it as &lt;code&gt;static/css/green.css&lt;/code&gt;, relative to your website root (i.e. &lt;strong&gt;not&lt;/strong&gt; in the &lt;code&gt;themes&lt;/code&gt; directory).&lt;/p&gt;

&lt;h3 id=&#34;analytics&#34;&gt;Analytics&lt;/h3&gt;

&lt;p&gt;To enable &lt;a href=&#34;http://www.google.com/analytics&#34; target=&#34;_blank&#34;&gt;Google Analytics&lt;/a&gt;, add your tracking code in &lt;code&gt;config.toml&lt;/code&gt; similarly to &lt;code&gt;googleAnalytics = &amp;quot;UA-12345678-9&amp;quot;&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;third-party-and-local-scripts-js&#34;&gt;Third party and local scripts (JS)&lt;/h3&gt;

&lt;p&gt;To add a third party script, create a file named &lt;code&gt;head_custom.html&lt;/code&gt; in a &lt;code&gt;layouts/partials/&lt;/code&gt; folder at the root of your website (not in the &lt;code&gt;themes&lt;/code&gt; folder). Any HTML code added to this file will be included within your website&amp;rsquo;s &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;. Therefore, it&amp;rsquo;s suitable for adding custom metadata or third party scripts specified with the &lt;em&gt;async&lt;/em&gt; attribute.&lt;/p&gt;

&lt;p&gt;Whereas for your own local scripts, you can link your local JS assets (relative to your root &lt;code&gt;static/js&lt;/code&gt;) from your &lt;code&gt;config.toml&lt;/code&gt; using &lt;code&gt;custom_js  = [&amp;quot;custom.js&amp;quot;]&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&#34;language-and-translation&#34;&gt;Language and translation&lt;/h3&gt;

&lt;p&gt;The interface text (e.g. buttons) is stored in language files which are collected from Academic&amp;rsquo;s &lt;code&gt;themes/academic/i18n/&lt;/code&gt; folder, as well as an &lt;code&gt;i18n/&lt;/code&gt; folder at the root of your project.&lt;/p&gt;

&lt;p&gt;To edit the interface text, copy &lt;code&gt;themes/academic/i18n/en.yaml&lt;/code&gt; to &lt;code&gt;i18n/en.yaml&lt;/code&gt; (relative to the root of your website). Open the new file and make any desired changes to the text appearing after &lt;code&gt;translation:&lt;/code&gt;. Note that the language files are formatted in YAML syntax.&lt;/p&gt;

&lt;p&gt;To translate the interface text to another language, follow the above instructions, but name the new file in the form &lt;code&gt;i18n/X.yaml&lt;/code&gt; where &lt;code&gt;X&lt;/code&gt; is the appropriate &lt;a href=&#34;http://www.w3schools.com/tags/ref_language_codes.asp&#34; target=&#34;_blank&#34;&gt;ISO/RFC5646 language identifier&lt;/a&gt; for the translation. Then follow the brief instructions in the &lt;em&gt;Language&lt;/em&gt; section at the bottom of your &lt;code&gt;config.toml&lt;/code&gt;. To change the default language used by Academic, set &lt;code&gt;defaultContentLanguage&lt;/code&gt; to the desired language identifier in your configuration file.&lt;/p&gt;

&lt;p&gt;To translate the navigation bar, you can edit the default &lt;code&gt;[[menu.main]]&lt;/code&gt; instances in &lt;code&gt;config.toml&lt;/code&gt;. However, for a multilingual site, you will need to duplicate all of the &lt;code&gt;[[menu.main]]&lt;/code&gt; instances and rename the new instances from &lt;code&gt;[[menu.main]]&lt;/code&gt; to &lt;code&gt;[[languages.X.menu.main]]&lt;/code&gt;, where &lt;code&gt;X&lt;/code&gt; is the language identifier (e.g. &lt;code&gt;[[languages.zh.menu.main]]&lt;/code&gt; for Simplified Chinese). Thus, the navigation bar can be displayed in multiple languages.&lt;/p&gt;

&lt;p&gt;To translate a content file in your &lt;code&gt;content/&lt;/code&gt; folder into another language, copy the file to &lt;code&gt;filename.X.md&lt;/code&gt; where &lt;code&gt;filename&lt;/code&gt; is your existing filename and &lt;code&gt;X&lt;/code&gt; is the appropriate &lt;a href=&#34;http://www.w3schools.com/tags/ref_language_codes.asp&#34; target=&#34;_blank&#34;&gt;ISO/RFC5646 language identifier&lt;/a&gt; for the translation. Then translate the content in the new file to the specified language.&lt;/p&gt;

&lt;p&gt;For further details on Hugo&amp;rsquo;s internationalization and multilingual features, refer to the &lt;a href=&#34;https://gohugo.io/content/multilingual/&#34; target=&#34;_blank&#34;&gt;associated Hugo documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;permalinks&#34;&gt;Permalinks&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Permalinks&lt;/em&gt;, or &lt;em&gt;permanent links&lt;/em&gt;, are URLs to individual pages and posts on your website. They are permanent web addresses which can be used to link to your content. Using Hugo&amp;rsquo;s &lt;em&gt;permalinks&lt;/em&gt; option these can be easily customized. For example, the blog post URL can be changed to the form &lt;em&gt;yourURL/2016/05/01/my-post-slug&lt;/em&gt; by adding the following near the top of your &lt;code&gt;config.toml&lt;/code&gt; (before &lt;code&gt;[params]&lt;/code&gt; settings):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[permalinks]
    post = &amp;quot;/:year/:month/:day/:slug&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Where &lt;code&gt;:slug&lt;/code&gt; defaults to the filename of the post, excluding the file extension. However, slug may be overridden on a per post basis if desired, simply by setting &lt;code&gt;slug = &amp;quot;my-short-post-title&amp;quot;&lt;/code&gt; in your post preamble.&lt;/p&gt;

&lt;h2 id=&#34;upgrading&#34;&gt;Upgrading&lt;/h2&gt;

&lt;p&gt;Feel free to &lt;em&gt;star&lt;/em&gt; the project on &lt;a href=&#34;https://github.com/gcushen/hugo-academic/&#34; target=&#34;_blank&#34;&gt;Github&lt;/a&gt; and monitor the &lt;a href=&#34;https://github.com/gcushen/hugo-academic/commits/master&#34; target=&#34;_blank&#34;&gt;commits&lt;/a&gt; for updates.&lt;/p&gt;

&lt;p&gt;Before upgrading the framework, it is recommended to make a backup of your entire website directory, or at least your &lt;code&gt;themes/academic&lt;/code&gt; directory. You can also read about the &lt;a href=&#34;https://github.com/gcushen/hugo-academic/releases&#34; target=&#34;_blank&#34;&gt;most recent milestones&lt;/a&gt; (but this doesn&amp;rsquo;t necessarily reflect the latest &lt;em&gt;master&lt;/em&gt; release).&lt;/p&gt;

&lt;p&gt;Before upgrading for the first time, the remote &lt;em&gt;origin&lt;/em&gt; repository should be renamed to &lt;em&gt;upstream&lt;/em&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd themes/academic
$ git remote rename origin upstream
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To list available updates:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd themes/academic
$ git fetch upstream
$ git log --pretty=oneline --abbrev-commit --decorate HEAD..upstream/master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then, upgrade by running:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git pull upstream
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you have modified files in &lt;code&gt;themes/academic&lt;/code&gt;, git will attempt to auto-merge changes. If conflicts are reported, you will need to manually edit the files with conflicts and add them back (&lt;code&gt;git add &amp;lt;filename&amp;gt;&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;If there are any issues after upgrading, you may wish to compare your site with the latest &lt;a href=&#34;https://github.com/gcushen/hugo-academic/tree/master/exampleSite&#34; target=&#34;_blank&#34;&gt;example site&lt;/a&gt; to check if any settings changed.&lt;/p&gt;

&lt;h2 id=&#34;feedback-contributing&#34;&gt;Feedback &amp;amp; Contributing&lt;/h2&gt;

&lt;p&gt;Please use the &lt;a href=&#34;https://github.com/gcushen/hugo-academic/issues&#34; target=&#34;_blank&#34;&gt;issue tracker&lt;/a&gt; to let me know about any bugs or feature requests, or alternatively make a pull request.&lt;/p&gt;

&lt;p&gt;For general questions about Hugo, there is a &lt;a href=&#34;http://discuss.gohugo.io&#34; target=&#34;_blank&#34;&gt;Hugo discussion forum&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;license&#34;&gt;License&lt;/h2&gt;

&lt;p&gt;Copyright 2016 &lt;a href=&#34;https://georgecushen.com&#34; target=&#34;_blank&#34;&gt;George Cushen&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Released under the &lt;a href=&#34;https://github.com/gcushen/hugo-academic/blob/master/LICENSE.md&#34; target=&#34;_blank&#34;&gt;MIT&lt;/a&gt; license.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
